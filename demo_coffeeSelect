import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Choose Beverage',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      initialRoute: '/', // 아래와 달리 임의로 루트 지정 가능, /는 일반적으로 루트 디렉토리를 의미
      routes: {
        '/':(context)=>const MyHomePage(title: '',),
        '/Measure': (context) => const MeasurePage(),
        '/Milk' : (context)=>const MilkPage(),
        '/SweetCoffee': (context)=>const SweetCoffeePage(),
        '/Juiceor': (context)=>const JuiceorPage(),
        '/Coffeeag': (context)=>const CoffeeagPage(),
        '/result': (context)=>const ResultPage(),
      },
      //home: const MyHomePage(title: 'Soccer Game'), // 라우팅 스택의 가장 밑, 홈을 본 홈페이지로 설정
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({super.key, required this.title});
  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      appBar: AppBar(

        backgroundColor: Theme.of(context).colorScheme.inversePrimary,

        title: const Text('Choose Beverage'),
      ),
      body: const MyForm(),
    );
  }
}

class MyForm extends StatefulWidget{
  const MyForm({Key? key}) : super(key: key);

  @override
  State<MyForm> createState() => _MyFormState();
}

class _MyFormState extends State<MyForm> {
  Userstate ustate=Userstate();

  final _formKey = GlobalKey<FormState>();
  @override
  Widget build(BuildContext context){
    return Form( // 입력한 값의 validation이 가능하고, 반드시 global key가 포함되어야 함.
        key: _formKey,
        child: ListView(
          children: [
            const SizedBox(
              height:150,
            ),
            const Text('I want to help you choose the beverage', style: TextStyle(
              fontSize: 20,
              ),
            ),
            const SizedBox(
              height:28,
            ),
            const Text('Lets start!', style: TextStyle(
              fontSize: 40,
              ),
            ),
            Column(
              children: [
                ElevatedButton(
                  child: const Text('Go'),
                  onPressed: (){
                    setState(() {
                      if(_formKey.currentState!.validate()){
                        ScaffoldMessenger.of(context).showSnackBar(const SnackBar(
                          content: Text('Processing data'),
                        ));
                        _formKey.currentState!.save();
                        Navigator.pushNamed(context, '/Measure', arguments: ustate); // 라우팅 경로를 지정했을 경우 굳이 이름을 설정하지 않고 바로 사용 가능.
                        // 이렇게 사용할 경우 argument를 사용해 값을 전달
                      }
                    });
                  },
                ),
              ],
            ),
          ],
        )
    );
  }
}

class Userstate{
  String beverage='';
  int numcof=0;
  bool juice = false;
  bool milk=false;
  bool coffeag=false;
  bool sweetcoffe=false;

}

class MeasurePage extends StatefulWidget {
  const MeasurePage({Key? key}) : super(key: key);

  @override
  State<MeasurePage> createState() => _MeasurePageState();
}

class _MeasurePageState extends State<MeasurePage> {
  int numcup = 0; // 상태로 관리할 변수
  late Userstate result; // 전달받은 인수도 상태로 관리

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    result = ModalRoute.of(context)?.settings.arguments as Userstate;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: const Text('Measure Your Coffee'),
        actions: [
          IconButton(
            onPressed: () {},
            icon: const Icon(Icons.home),
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'How many cups of coffee did you drink?',
              style: TextStyle(
                fontSize: 30,
              ),
            ),
            const SizedBox(
              height: 20,
            ),
            Text(
              '${result.numcof} cups',
              style: const TextStyle(
                fontSize: 50,
              ),
            ),
            const SizedBox(
              height: 20,
            ),
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      if (result.numcof > 0) {
                        result.numcof--;
                      }
                    });
                  },
                  child: const Text('-'),
                ),
                const SizedBox(
                  width: 20,
                ),
                ElevatedButton(
                  onPressed: () {
                    setState(() {
                      result.numcof++;
                    });
                  },
                  child: const Text('+'),
                ),
              ],
            ),
            const SizedBox(
              height: 20,
            ),
            ElevatedButton(
              onPressed: () {
                if (result.numcof <= 1) {
                  Navigator.pushNamed(context, '/Milk', arguments: result);
                } else {
                  Navigator.pushNamed(context, '/Juiceor', arguments: result);
                }
              },
              child: const Text('Next'),
            ),
          ],
        ),
      ),
    );
  }
}


class MilkPage extends StatelessWidget{
  const MilkPage({Key? key}) : super(key:key);

  @override
  Widget build(BuildContext context) {
    final result=ModalRoute.of(context)?.settings.arguments as Userstate;
    return Scaffold(
      appBar: AppBar(

        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: const Text('Milk'),
        actions: [
          IconButton(
              onPressed:(){},
              icon: const Icon(Icons.add)
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Since you drank 1 cup of coffee, you may want coffee', style: TextStyle(
              fontSize: 30,
            ),
            ),
            const SizedBox(
              height: 20,
            ),
            Text('Do you want milk in the coffee?', style: TextStyle(
              fontSize: 50,
            ),
            ),
            const SizedBox(
              height: 20,
            ),
            Row(
              children: [
                ElevatedButton(
                  onPressed: (){
                    Navigator.pushNamed(context, '/SweetCoffee', arguments: result);
                  },
                  child: const Text('Yes'),
                ),
                const SizedBox(
                  width: 20,
                ),
                ElevatedButton(
                  onPressed: (){
                    result.beverage='Americano';
                    Navigator.pushNamed(context, '/result', arguments: result);
                  },
                  child: const Text('No'),
                ),
              ],
            )
          ],
        ),
      ),
    );
  }
}


class SweetCoffeePage extends StatelessWidget{
  const SweetCoffeePage({Key? key}) : super(key:key);

  @override
  Widget build(BuildContext context) {
    final result=ModalRoute.of(context)?.settings.arguments as Userstate;
    return Scaffold(
      appBar: AppBar(

        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: const Text('Sweet Coffee'),
        actions: [
          IconButton(
              onPressed:(){},
              icon: const Icon(Icons.add)
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Do you want sweet coffee?', style: TextStyle(
              fontSize: 30,
            ),
            ),
            const SizedBox(
              height: 20,
            ),
            Row(
              children: [
                ElevatedButton(
                  onPressed: (){
                    result.beverage='Mocha Latte';
                    Navigator.pushNamed(context,'/result', arguments: result);
                  },
                  child: const Text('Yes'),
                ),
                const SizedBox(
                  width: 20,
                ),
                ElevatedButton(
                  onPressed: (){
                    result.beverage='Caffe Latte';
                    Navigator.pushNamed(context, '/result', arguments: result);
                  },
                  child: const Text('No'),
                ),
              ],
            )
          ],
        ),
      ),
    );
  }
}

class JuiceorPage extends StatelessWidget{
  const JuiceorPage({Key? key}) : super(key:key);

  @override
  Widget build(BuildContext context) {
    final result=ModalRoute.of(context)?.settings.arguments as Userstate;
    return Scaffold(
      appBar: AppBar(

        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: const Text('Juice or Latte'),
        actions: [
          IconButton(
              onPressed:(){},
              icon: const Icon(Icons.add)
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Since you drank 2 cup of coffee, you may not want coffee', style: TextStyle(
              fontSize: 30,
            ),
            ),
            const SizedBox(
              height: 20,
            ),
            Text('Do you want juice or latte?', style: TextStyle(
              fontSize: 50,
            ),
            ),
            const SizedBox(
              height: 20,
            ),
            Row(
              children: [
                ElevatedButton(
                  onPressed: (){
                    result.beverage='Grapefruit Juice';
                    Navigator.pushNamed(context,'/result', arguments: result);
                  },
                  child: const Text('Juice'),
                ),
                const SizedBox(
                  width: 20,
                ),
                ElevatedButton(
                  onPressed: (){
                    Navigator.pushNamed(context, '/Coffeeag', arguments: result);
                  },
                  child: const Text('Latte'),
                ),
              ],
            )
          ],
        ),
      ),
    );
  }
}

class CoffeeagPage extends StatelessWidget{
  const CoffeeagPage({Key? key}) : super(key:key);

  @override
  Widget build(BuildContext context) {
    final result=ModalRoute.of(context)?.settings.arguments as Userstate;
    return Scaffold(
      appBar: AppBar(

        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: const Text('Coffee Again'),
        actions: [
          IconButton(
              onPressed:(){},
              icon: const Icon(Icons.add)
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Do you want some more coffee?', style: TextStyle(
              fontSize: 30,
              ),
            ),
            const SizedBox(
              height: 20,
            ),
            Row(
              children: [
                ElevatedButton(
                  onPressed: (){
                    Navigator.pushNamed(context,'/SweetCoffee', arguments: result);
                  },
                  child: const Text('Yes'),
                ),
                const SizedBox(
                  width: 20,
                ),
                ElevatedButton(
                  onPressed: (){
                    result.beverage='Sweet Potato Latte';
                    Navigator.pushNamed(context, '/result', arguments: result);
                  },
                  child: const Text('No'),
                ),
              ],
            )
          ],
        ),
      ),
    );
  }
}

class ResultPage extends StatelessWidget {
  const ResultPage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    final result = ModalRoute.of(context)?.settings.arguments as Userstate;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Theme.of(context).colorScheme.inversePrimary,
        title: const Text('Result'),
        actions: [
          IconButton(
            onPressed: () {},
            icon: const Icon(Icons.add),
          ),
        ],
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text(
              'Your best beverage is',
              style: TextStyle(
                fontSize: 30,
              ),
            ),
            const SizedBox(
              height: 20,
            ),
            Text(
              result.beverage,
              style: const TextStyle(
                fontSize: 50,
              ),
            ),
            const SizedBox(
              height: 20,
            ),
            ElevatedButton.icon(
              onPressed: () {
                result.numcof = 0;
                Navigator.pushNamedAndRemoveUntil(
                  context,
                  '/', // 루트 페이지로 돌아가기
                      (Route<dynamic> route) => false, // 모든 이전 라우트 제거
                  arguments: result,
                );
              },
              icon: const Icon(Icons.refresh), // 리로드 아이콘 추가
              label: const Text('Return to Home'),
            ),
          ],
        ),
      ),
    );
  }
}
